if _G.DancerLoaded then return end
_G.DancerLoaded = true

local player = game.Players.LocalPlayer
local savedUIs = {}


local dances = {
    { name  = "Chess (Rat Dance)", id    = 104525136565640, sound = nil },
    { name = "Gangnam Style",   id = 12438774071,    sound = nil },
    { name = "Caramell Dansen", id = 103597509139287, sound = nil },
    { name = "Boogie Down",     id = 16769959846,     sound = nil },
    { name = "Egypt",           id = 95986135548450,  sound = nil },
    { name = "Get Griddy",      id = 15704995372,     sound = nil },
    { name = "Billie Jean",      id = 108805310510119,     sound = nil },
    { name = "Happy Walk",      id = 124074233795203,     sound = nil },
    { name = "Bumblebee",      id = 10048786578,     sound = nil },
    { name = "Smooth Moves",      id = 77170841283499,     sound = nil },
    { name = "That One Peashooter",      id = 15039779727,     sound = nil },
    { name = "I WANNA RUNAWAY",      id = 119147810948063,     sound = nil },
    { name = "Lonely",      id = 114322394064953,     sound = nil },
    { name = "Slick Back",      id = 18986357892,     sound = nil },
    { name = "YIPPIE",      id = 91260130273371,     sound = nil },
    { name = "The Honoured One",      id = 77149144728517,     sound = nil },
    { name = "Hollow Purple (200%)",      id = 112536589373736,     sound = nil },

}

local animations = {}
local currentTrack, currentDanceID

-- backup UI
local gui = player:WaitForChild("PlayerGui")
for _, child in ipairs(gui:GetChildren()) do
    if child:IsA("ScreenGui") then
        savedUIs[child.Name] = child:Clone()
    end
end

-- load reanimate
task.spawn(function()
    loadstring(game:HttpGet(
        "https://raw.githubusercontent.com/Raafage/dance-source/refs/heads/main/reanimatorig"
    ))()
end)

-- load Animator
if not getgenv().Animator then
    loadstring(game:HttpGet(
        "https://raw.githubusercontent.com/xhayper/Animator/main/Source/Main.lua"
    ))()
end

-- sanitize filenames (replace non-alphanumeric with underscores)
local function sanitize(name)
    return name:gsub("[%W]", "_")
end

-- ensure folder, then write each sound locally
if not isfolder("Dances") then
    makefolder("Dances")
end

for _, dance in ipairs(dances) do
    if dance.sound then
        local safeName = sanitize(dance.name)
        writefile("Dances/"..safeName..".mp3", game:HttpGet(dance.sound))
    end
end

-- single Sound object for playback
local Playsound = Instance.new("Sound", workspace)
Playsound.Name   = "DanceSound"
Playsound.Volume = 1

-- restore any backed-up ScreenGuis
local function restoreUI()
    local gui = player:WaitForChild("PlayerGui")
    for name, clone in pairs(savedUIs) do
        if not gui:FindFirstChild(name) then
            clone:Clone().Parent = gui
        end
    end
end

-- build the dance UI
local function buildUI()
    local gui = player:WaitForChild("PlayerGui")
    if gui:FindFirstChild("DanceUI") then return end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name         = "DanceUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent       = gui
    screenGui.DisplayOrder = 999999999

    -- Main Panel
    local canvasGroup = Instance.new("Frame", screenGui)
    canvasGroup.Size            = UDim2.new(0, 240, 0, 340)
    canvasGroup.Position        = UDim2.new(0, 140, 0, 14)
    canvasGroup.BackgroundColor3= Color3.fromRGB(167, 102, 67)
    canvasGroup.Active          = true
    canvasGroup.Visible         = false
    canvasGroup.Draggable       = true
    canvasGroup.ClipsDescendants= true
    canvasGroup.BorderSizePixel = 0

    -- Shadow
    local shadow = Instance.new("ImageLabel", canvasGroup)
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.Position    = UDim2.new(0.5, 0, 0.5, 0)
    shadow.Size        = UDim2.new(1.8, 0, 1.8, 0)
    shadow.Image       = "rbxassetid://8697780388"
    shadow.ZIndex      = 0

    -- Top Bar
    local topBar = Instance.new("Frame", canvasGroup)
    topBar.Size            = UDim2.new(1, 0, 0.272, 0)
    topBar.Position        = UDim2.new(0, 0, 0, 0)
    topBar.BackgroundColor3= Color3.fromRGB(8, 202, 6)
    topBar.BorderSizePixel = 0
    topBar.ZIndex          = 1
    local topCorner = Instance.new("UICorner", topBar)
    topCorner.CornerRadius = UDim.new(0, 8)

    -- Close Button
    local closeBtn = Instance.new("TextButton", topBar)
    closeBtn.Size            = UDim2.new(0, 24, 0, 24)
    closeBtn.Position        = UDim2.new(0.879, 0, 0.013, 0)
    closeBtn.Text            = "X"
    closeBtn.BackgroundColor3= Color3.fromRGB(255, 80, 80)
    closeBtn.TextColor3      = Color3.new(1, 1, 1)
    closeBtn.Font            = Enum.Font.SourceSansBold
    closeBtn.TextSize        = 14
    closeBtn.ZIndex          = 2
    local closeCorner = Instance.new("UICorner", closeBtn)
    closeCorner.CornerRadius  = UDim.new(1, 0)
    closeBtn.MouseButton1Click:Connect(function()
        canvasGroup.Visible = false
        Playsound:Stop()
    end)

    -- Decorative Bar
    local decorBar = Instance.new("Frame", canvasGroup)
    decorBar.Size            = UDim2.new(0, 240, 0, 6)
    decorBar.Position        = UDim2.new(0, 0, 0.094, 0)
    decorBar.BackgroundColor3= Color3.fromRGB(128, 64, 29)
    decorBar.BorderSizePixel = 0
    decorBar.ZIndex          = 2

    -- Scroll Frame
    local scroll = Instance.new("ScrollingFrame", canvasGroup)
    scroll.BackgroundTransparency = 0
    scroll.BackgroundColor3      = Color3.fromRGB(167, 102, 67)
    scroll.Size                  = UDim2.new(0, 240, 0, 291)
    scroll.Position              = UDim2.new(0, 0, 0.112, 0)
    scroll.ScrollBarThickness    = 4
    scroll.ScrollBarImageColor3  = Color3.fromRGB(0, 0, 0)
    scroll.AutomaticCanvasSize   = Enum.AutomaticSize.Y
    scroll.BorderSizePixel       = 0
    scroll.Active                = true
    scroll.ScrollingDirection    = Enum.ScrollingDirection.Y
    scroll.ZIndex                = 3

    local layout = Instance.new("UIListLayout", scroll)
    layout.Padding             = UDim.new(0, 7)
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center

    local padding = Instance.new("UIPadding", scroll)
    padding.PaddingTop = UDim.new(0, 10)

    -- Toggle Button
    local toggleButton = Instance.new("ImageButton", screenGui)
    toggleButton.Size            = UDim2.new(0, 50, 0, 50)
    toggleButton.Position        = UDim2.new(0, 14, 0, 14)
    toggleButton.Image            = "rbxassetid://86229016270997"
    toggleButton.BackgroundTransparency = 1
    toggleButton.Draggable       = true
    toggleButton.ZIndex          = 4
    toggleButton.MouseButton1Click:Connect(function()
        canvasGroup.Visible = not canvasGroup.Visible
    end)

    -- Final Corners & Stroke
    local finalCorner = Instance.new("UICorner", canvasGroup)
    finalCorner.CornerRadius = UDim.new(0, 8)

    local finalStroke = Instance.new("UIStroke", canvasGroup)
    finalStroke.Color       = Color3.fromRGB(78, 49, 27)
    finalStroke.Thickness   = 4.4


	local txt = Instance.new("TextLabel", scroll)
	txt.Size = UDim2.new(0.9, 0, 0, 15)
	txt.Font = Enum.Font.SourceSansBold
	txt.BackgroundTransparency = 1
	txt.Text = "Dance UI by TheRavenDev
	txt.TextColor3 = Color3.fromRGB(189, 134, 82)

	local btnStroke = Instance.new("UIStroke", txt)
        btnStroke.Color         = Color3.fromRGB(128, 64, 29)
        btnStroke.Thickness     = 1.8
        btnStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Contextual


    -- Rig detection
    local rig = workspace:FindFirstChild(player.Name.."_Fake")
               or workspace:FindFirstChild("CloneCharacter")
    if not rig then
        warn("No rig found to animate")
        return
    end

    -- Create Dance Buttons
    for i, dance in ipairs(dances) do
        animations[i] = getgenv().Animator.new(rig, dance.id)
        animations[dance.name] = animations[i]

        local btn = Instance.new("TextButton", scroll)
        btn.Size            = UDim2.new(0.9, 0, 0, 50)
        btn.BackgroundColor3= Color3.fromRGB(100, 35, 0)
        btn.Text            = ""
        btn.ZIndex          = 3

        local btnCorner = Instance.new("UICorner", btn)
        btnCorner.CornerRadius = UDim.new(0, 8)

        local btnStroke = Instance.new("UIStroke", btn)
        btnStroke.Color         = Color3.fromRGB(128, 64, 29)
        btnStroke.Thickness     = 2.8
        btnStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

        local label = Instance.new("TextLabel", btn)
        label.Size             = UDim2.new(1, 0, 0.5, 0)
        label.Position         = UDim2.new(0, 0, 0.24, 0)
        label.Text             = dance.name
        label.Font             = Enum.Font.SourceSansBold
        label.TextColor3       = Color3.fromRGB(255, 255, 255)
        label.TextScaled       = true
        label.BackgroundTransparency = 1
        label.ZIndex           = 4

        btn.MouseButton1Click:Connect(function()
            local animRef = animations[i]
            if not animRef then return end

            if currentTrack == animRef then
                currentTrack:Stop()
                Playsound:Stop()
                currentTrack = nil
                currentDanceID = nil
            else
                if currentTrack then
                    currentTrack:Stop()
                    Playsound:Stop()
                end

                animRef:Play()
                currentTrack = animRef
                currentDanceID = dance.id

                if dance.sound and customasset then
                    task.spawn(function()
                        local safeName = sanitize(dance.name)
                        Playsound.SoundId     = customasset("Dances/"..safeName..".mp3")
                        Playsound.TimePosition= 0
                        Playsound:Play()
                    end)
                end
            end
        end)
    end
end

-- Startup
repeat task.wait() until workspace:FindFirstChild(player.Name.."_Fake")
    or workspace:FindFirstChild("CloneCharacter")
task.wait(1)
restoreUI()
buildUI()

player.CharacterAdded:Connect(function()
    repeat task.wait() until workspace:FindFirstChild(player.Name.."_Fake")
        or workspace:FindFirstChild("CloneCharacter")
    task.wait(1)
    restoreUI()
    buildUI()

    task.wait(1)
    game.StarterGui:SetCore("SendNotification", {
	    Title = "Dance UI by TheRavenDev loaded!";
	    Text = "Open the UI via the newly-added button on your client.";
	    Duration = 5;
	    Icon = "rbxassetid://82724486";
    })
end)
