if _G.DancerLoaded then return end
_G.DancerLoaded = true

local player = game.Players.LocalPlayer
local savedUIs = {}

local dances = {
    { name = "Rat", id = 104525136565640 },
    { name = "Slick", id = 16554002009 },
    { name = "Griddy", id = 12887652370 },
    { name = "Renegade", id = 5058884980 }
}

local animations = {}
local currentTrack, currentDanceID

--Backup existing UI
local gui = player:WaitForChild("PlayerGui")
for _, child in ipairs(gui:GetChildren()) do
    if child:IsA("ScreenGui") then
        savedUIs[child.Name] = child:Clone()
    end
end

--Load reanimation
task.spawn(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/somethingsimade/CurrentAngleV2/refs/heads/main/v2"))()
end)

--Load Animator
if not getgenv().Animator then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/xhayper/Animator/main/Source/Main.lua"))()
end

--Restore UI
local function restoreUI()
    local gui = player:WaitForChild("PlayerGui")
    for name, clone in pairs(savedUIs) do
        if not gui:FindFirstChild(name) then
            clone:Clone().Parent = gui
        end
    end
end

--Build dance elements
local function buildUI()
    local gui = player:WaitForChild("PlayerGui")
    if gui:FindFirstChild("DanceUI") then return end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "DanceUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = gui

    local toggleButton = Instance.new("TextButton", screenGui)
    toggleButton.Size = UDim2.new(0, 120, 0, 36)
    toggleButton.Position = UDim2.new(0, 14, 0, 14)
    toggleButton.Text = "Toggle Dance UI"
    toggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 200)
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextSize = 18
    toggleButton.Draggable = true

    local danceFrame = Instance.new("Frame", screenGui)
    danceFrame.Size = UDim2.new(0, 240, 0, 340)
    danceFrame.Position = UDim2.new(0, 140, 0, 14)
    danceFrame.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
    danceFrame.Visible = false
    danceFrame.Active = true
    danceFrame.Draggable = true

    local scroll = Instance.new("ScrollingFrame", danceFrame)
    scroll.Size = UDim2.new(1, 0, 1, 0)
    scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    scroll.BackgroundTransparency = 1
    scroll.ScrollBarThickness = 6
    scroll.BorderSizePixel = 0
    scroll.Active = true

    local uilayout = Instance.new("UIListLayout", scroll)
    uilayout.Padding = UDim.new(0, 0) -- Optional spacing between buttons

    toggleButton.MouseButton1Click:Connect(function()
        danceFrame.Visible = not danceFrame.Visible
    end)

    local closebtn = Instane.new("TextButton", scroll)
    closebtn.Size = UDim2.new(1, -10, 0, 22)
    closebtn.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
    closebtn.Text = "Close"
    closebtn.TextColor3 = Color3.new(1, 1, 1)
    closebtn.Font = Enum.Font.SourceSansBold

    closebtn.MouseButton1Click:Connect(function()
       danceFrame.Visible = not danceFrame.Visible
    end)
    

    
    scroll.CanvasSize = UDim2.new(0, 0, 0, 48)

    local rig = workspace:FindFirstChild(player.Name.."_Fake") or workspace:FindFirstChild("CloneCharacter")
    if not rig then
        warn("⚠️ No valid rig found.")
        return
    end

    --Create animations
    for i, dance in ipairs(dances) do
        animations[i] = getgenv().Animator.new(rig, dance.id)
        animations[dance.name] = animations[i]  -- optional alias by name

        local btn = Instance.new("TextButton", scroll)
        btn.Size = UDim2.new(1, -10, 0, 44)
        btn.Text = dance.name
        btn.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
        btn.TextColor3 = Color3.new(0, 0, 0)
        btn.Font = Enum.Font.SourceSansBold
        btn.TextSize = 16
        scroll.CanvasSize = UDim2.new(0, 0, 0, (i + 1) * 48)

        btn.MouseButton1Click:Connect(function()
            local animRef = animations[i]
            if not animRef then return end

            if currentTrack == animRef then
                currentTrack:Stop()
                currentTrack = nil
                currentDanceID = nil
            else
                if currentTrack then
                    currentTrack:Stop()
                end
                local track = animRef:Play()
                currentTrack = animRef
                currentDanceID = dance.id
            end
        end)
    end
end


repeat task.wait() until workspace:FindFirstChild(player.Name.."_Fake") or workspace:FindFirstChild("CloneCharacter")
task.wait(1)
restoreUI()
buildUI()


player.CharacterAdded:Connect(function()
    repeat task.wait() until workspace:FindFirstChild(player.Name.."_Fake") or workspace:FindFirstChild("CloneCharacter")
    task.wait(1)
    restoreUI()
    buildUI()
end)
